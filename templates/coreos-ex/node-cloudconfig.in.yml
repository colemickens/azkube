#cloud-config

write_files:
- path: "/etc/kubernetes/certs/ca.crt"
  permissions: "0644"
  encoding: "base64"
  owner: "root"
  content: |
    {{{caCertificate}}}

- path: "/etc/kubernetes/certs/apiserver.crt"
  permissions: "0644"
  encoding: "base64"
  owner: "root"
  content: |
    {{{apiserverCertificate}}}

- path: "/etc/kubernetes/certs/apiserver.key"
  permissions: "0644"
  encoding: "base64"
  owner: "root"
  content: |
    {{{apiserverPrivateKey}}}

- path: "/etc/kubernetes/certs/client.crt"
  permissions: "0644"
  encoding: "base64"
  owner: "root"
  content: |
    {{{clientCertificate}}}

- path: "/etc/kubernetes/certs/client.key"
  permissions: "0644"
  encoding: "base64"
  owner: "root"
  content: |
    {{{clientPrivateKey}}}

- path: "/etc/kubernetes/azure.json"
  permissions: "0644"
  owner: "root"
  content: |
      {
          "tenantId": "{{{tenantId}}}",
          "subscriptionId": "[[[subscriptionId]]]",
          "aadClientId": "{{{servicePrincipalClientId}}}",
          "aadClientSecret": "{{{servicePrincipalClientSecret}}}",
          "resourceGroup": "[[[resourceGroup]]]",
          "location": "[[[location]]]",
          "subnetName": "[[[subnetName]]]",
          "securityGroupName": "[[[nsgName]]]",
          "vnetName": "[[[vnetName]]]",
          "routeTableName": "[[[routeTableName]]]"
      }

- path: "/var/lib/kubelet/kubeconfig"
  permissions: "0644"
  owner: "root"
  content: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: localcluster
      cluster:
        certificate-authority: /etc/kubernetes/certs/ca.crt
        server: https://{{{masterPrivateIp}}}:6443
    users:
    - name: client
      user:
        client-certificate: /etc/kubernetes/certs/client.crt
        client-key: /etc/kubernetes/certs/client.key
    contexts:
    - context:
        cluster: localcluster
        user: client
      name: localclustercontext
    current-context: localclustercontext

coreos:
  flannel:
    etcd_endpoints: "http://{{{masterPrivateIp}}}:2379"
  units:
    - name: "flanneld.service"
      command: "start"
    - name: "docker.service"
      command: "start"
      drop-ins:
        - name: clear_mount_propagtion_flags.conf
          content: |
            [Service]
            MountFlags=shared
    - name: "kubelet.service"
      command: "start"
      content: |
        [Unit]
        Description=Kubelet
        Requires=docker.service
        Requires=flanneld.service
        After=docker.service
        After=flanneld.service

        [Service]
        Restart=always
        ExecStartPre=/bin/mkdir -p /var/lib/kubelet
        ExecStartPre=/bin/mount --bind /var/lib/kubelet /var/lib/kubelet
        ExecStartPre=/bin/mount --make-shared /var/lib/kubelet
        ExecStart=/usr/bin/docker run \
          --net=host \
          --pid=host \
          --privileged \
          --volume=/:/rootfs:ro \
          --volume=/sys:/sys:ro \
          --volume=/var/run:/var/run:rw \
          --volume=/var/lib/docker/:/var/lib/docker:rw \
          --volume=/var/lib/kubelet/:/var/lib/kubelet:shared \
          --volume=/var/log/containers/:/var/log/containers:rw \
          --volume=/etc/kubernetes/:/etc/kubernetes/:rw \
            {{{kubernetesHyperkubeSpec}}} \
              /hyperkube kubelet \
                --api-servers="https://{{{masterPrivateIp}}}:6443" \
                --kubeconfig=/var/lib/kubelet/kubeconfig \
                --address=0.0.0.0 \
                --allow-privileged=true \
                --enable-server \
                --config=/etc/kubernetes/manifests \
                --cluster-dns=[[[kubeDnsServiceIP]]] \
                --cluster-domain=cluster.local \
                --register-node=true \
                --register-schedulable=true \
                --v=2
        ExecStop=/usr/bin/docker stop -t 2 kubelet
